<!--EXTERNAL_PROPERTIES: GameVersion;HarmonyVersion;BuildResourcesVersion-->
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net472;net6</TargetFrameworks>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <Platforms>x64</Platforms>
    <BuildForWindows>false</BuildForWindows>
    <BuildForWindowsStore>false</BuildForWindowsStore>

    <Configurations>Stable_Debug;Stable_Release;Beta_Debug;Beta_Release</Configurations>
  </PropertyGroup>

  <PropertyGroup Condition="$(TargetFramework) == 'net472'">
    <BuildForWindows>true</BuildForWindows>
  </PropertyGroup>
  <PropertyGroup Condition="$(TargetFramework) == 'net6'">
    <BuildForWindowsStore>true</BuildForWindowsStore>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <EnableWindowsTargeting>true</EnableWindowsTargeting>
  </PropertyGroup>

  <!--Windows Forms-->
  <ItemGroup Condition="$(TargetFramework) == 'net472'">
    <Reference Include="System.Windows.Forms" PrivateAssets="all" />
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework) == 'net6'">
    <FrameworkReference Include="Microsoft.WindowsDesktop.App" PrivateAssets="all" />
  </ItemGroup>
  <!--Windows Forms-->
  
  <!--Module Creation-->
  <PropertyGroup>
    <ModuleId>Bannerlord.Harmony</ModuleId>
    <ModuleName>Harmony</ModuleName>
  </PropertyGroup>
  <!--Module Creation-->

  <ItemGroup>
    <PackageReference Include="Lib.Harmony.Thin" Version="$(HarmonyVersion).1" />
    <PackageReference Include="MonoMod.Core" Version="1.1.0" />
    
    <PackageReference Include="Bannerlord.BuildResources" Version="$(BuildResourcesVersion)" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive" />
    <PackageReference Include="Bannerlord.BUTR.Analyzers" Version="$(BUTRAnalyzerVersion)" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive" />
    <PackageReference Include="Bannerlord.BUTR.Shared" Version="$(BUTRSharedVersion)" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive" />
    <PackageReference Include="Bannerlord.ModuleManager.Source" Version="$(BUTRModuleManagerVersion)" />
    <PackageReference Include="Bannerlord.ReferenceAssemblies.Core" Version="$(GameVersion).*" PrivateAssets="All" />
    <PackageReference Include="Harmony.Extensions" Version="$(HarmonyExtensionsVersion)" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive" />
  </ItemGroup>

  <ItemGroup>
    <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
      <_Parameter1>HarmonyVersion</_Parameter1>
      <_Parameter2>$(HarmonyVersion).1</_Parameter2>
    </AssemblyAttribute>
  </ItemGroup>


  <Target Name="SetVersion" BeforeTargets="PrepareForBuild" DependsOnTargets="RunResolvePackageDependencies">
    <PropertyGroup>
      <Version>$(HarmonyVersion)</Version>
    </PropertyGroup>

    <SetVersion2 VersionIn="$(Version)" VersionCI="$(GITHUB_RUN_NUMBER)">
      <Output TaskParameter="VersionOut" PropertyName="Version" />
    </SetVersion2>
  </Target>

  <UsingTask TaskName="SetVersion2" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <VersionIn ParameterType="System.String" Required="true" />
      <VersionCI ParameterType="System.String" Required="true" />
      <VersionOut ParameterType="System.String" Required="false" Output="true" />
    </ParameterGroup>
    <Task>
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          var version = System.Version.Parse(VersionIn);
          var versionCI = int.Parse(VersionCI);
          if (version.Revision == -1)
          {
            VersionOut = VersionIn + "." + VersionCI;
          }
          else if (version.Revision == 0)
          {
            version = new Version(version.Major, version.Minor, version.Build, versionCI);
            VersionOut = version.ToString();
          }
          else
          {
            VersionOut = VersionIn + VersionCI;
          }
        ]]>
      </Code>
    </Task>
  </UsingTask>

</Project>